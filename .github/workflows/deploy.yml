name: Upload docker image to ecr on merge
on:
  pull_request:
    types: [closed]
    branches:
      - master
    # paths:
    #   - terraform/**
jobs:
  tf_code_check:
    if: github.event.pull_request.merged == true
    name: Terraform Validation and Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: ../
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: terraformtest
          IMAGE_TAG: ${{ github.sha }}
        run: |
          pwd
          echo $REGISTRY
          echo $REPOSITORY
          echo $IMAGE_TAG
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Terraform destroy
        id: destroy
        run: terraform destroy

  testcheck:
    name: Test job
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: echo "Ping"
